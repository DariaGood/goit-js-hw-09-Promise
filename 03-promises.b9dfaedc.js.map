{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAOMC,EAAYC,SAASC,cAAc,UACnCC,EAAOF,SAASC,cAAc,SAC9BE,EAAUH,SAASC,cAAc,kBACjCG,EAASJ,SAASC,cAAc,iBAChCI,EAAWL,SAASC,cAAc,mBAIxC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,CAAEH,WAAUC,UAGhBG,EAAI,CAAEJ,WAAUC,S,GAGjBA,E,IAbPN,EAAKa,iBAAiB,UAiBtB,SAAiBC,GACfA,EAAEC,iBAEFlB,EAAUmB,UAAW,EAIrB,IAHA,IAAIC,EAAQhB,EAAQiB,cACdC,EAAOjB,EAAOgB,cACdE,EAASjB,EAASe,cACfG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDW,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// const form = Number(document.querySelector('.form').value);\n// const delay = Number(document.querySelector('[name=\"delay\"]').value);\n// const step = Number(document.querySelector('[name=\"step\"]').value);\n// const amount = Number(document.querySelector('[name=\"amount\"]').value);\n\nconst btnSubmit = document.querySelector('button');\nconst form = document.querySelector('.form');\nconst delayIn = document.querySelector('[name=\"delay\"]');\nconst stepIn = document.querySelector('[name=\"step\"]');\nconst amountIn = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', onClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n        // Fulfill\n      } else {\n        rej({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nfunction onClick(e) {\n  e.preventDefault();\n\n  btnSubmit.disabled = true;\n  let delay = delayIn.valueAsNumber;\n  const step = stepIn.valueAsNumber;\n  const amount = amountIn.valueAsNumber;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n    //position +=1;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$btnSubmit","document","querySelector","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$delayIn","$ce04d3a99e08e73b$var$stepIn","$ce04d3a99e08e73b$var$amountIn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","e","preventDefault","disabled","delay1","valueAsNumber","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b9dfaedc.js.map"}